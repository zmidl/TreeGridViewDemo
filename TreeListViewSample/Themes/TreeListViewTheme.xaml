<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:convert="clr-namespace:TreeListViewSample.Converters"
  xmlns:local="clr-namespace:TreeListViewSample.Controls">

  <convert:LevelToIndentConverter x:Key="LevelIndentConverter" />

  <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
    <Style.Setters>
      <Setter Property="Height" Value="34" />
      <Setter Property="Background" >
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFC6C6C6" Offset="1"/>
            <GradientStop Color="#FFE9EAEF" Offset="0"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>

  <Style x:Key="ExpandStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Width" Value="19"/>
    <Setter Property="Height" Value="13"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="19" Height="13" Background="Transparent">
            <Border Width="9" Height="9" BorderThickness="1" BorderBrush="#FF7898B5" SnapsToDevicePixels="true">
              <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Color="White" Offset=".2"/>
                    <GradientStop Color="#FFC0B7A6" Offset="1"/>
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Border.Background>
              <Path x:Name="ExpandPath" Margin="1,1,1,1" Fill="Black" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="FirstColumn">
    <DockPanel>
      <ToggleButton 
              x:Name="Expander" 
              Style="{StaticResource ExpandStyle}" 
              Margin="{Binding Path=Level, Converter={StaticResource LevelIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}" 
              ClickMode="Press"/>
      <!--首列绑定值-->
      <TextBlock Text="{Binding Name}"/>
    </DockPanel>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}" Value="False">
        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

  <GridViewColumnCollection x:Key="gvColumns">
    <GridViewColumn Header="姓名" CellTemplate="{StaticResource FirstColumn}" Width="150" />
    <GridViewColumn Header="年龄" DisplayMemberBinding="{Binding Age}" Width="80" />
    <GridViewColumn Header="性别" DisplayMemberBinding="{Binding Sex}" Width="80" />
    <GridViewColumn Header="职务" DisplayMemberBinding="{Binding Duty}" Width="100" />
  </GridViewColumnCollection>

  <AlternationConverter x:Key="AlternationColor">
    <SolidColorBrush>#FFC6C6C6</SolidColorBrush>
    <SolidColorBrush>DarkGray</SolidColorBrush>
  </AlternationConverter>

  <Style TargetType="{x:Type local:TreeListViewItem}">
    <Setter Property="FontSize" Value="13" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:TreeListView.AlternationIndex), Converter={StaticResource AlternationColor}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
          <StackPanel>
            <Border 
                x:Name="innerBorder" Height="30"
                BorderThickness="0,0,0,1"
                BorderBrush="#FFC6C6C6"
                Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                SnapsToDevicePixels="True">
              <GridViewRowPresenter 
                x:Name="PART_Header"
                Content="{TemplateBinding Header}"
                Columns="{StaticResource gvColumns}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true" SourceName="innerBorder">
              <Setter Property="Foreground" Value="White"/>
              <Setter Property="Background" Value="#FFC66152" TargetName="innerBorder"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Foreground" Value="White"/>
              <Setter Property="Background" Value="#FFC66152" TargetName="innerBorder"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="innerBorder" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Width" Value="Auto"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false"/>
                <Condition Property="Height" Value="Auto"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:TreeListView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TreeListView}">
          <!--Create a standard border around the 'TreeListView'.-->
          <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
              <DockPanel>
                <GridViewHeaderRowPresenter DockPanel.Dock="Top" ColumnHeaderContainerStyle="{StaticResource ColumnHeaderStyle}" Columns="{StaticResource gvColumns}" />
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                  <ItemsPresenter />
                </ScrollViewer>
              </DockPanel>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>